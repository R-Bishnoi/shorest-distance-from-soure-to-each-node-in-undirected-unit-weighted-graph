#include<bits/stdc++.h>
using namespace std;

void bfs( vector<int>adj[],vector<bool>&vis,vector<int>&dis,int s){
 
 queue<int>q;
 q.push(s);
 dis[s]=0;
 vis[s]=true;
 
 while(!q.empty()){
     int i=q.front();
     q.pop();
     
    for(auto x:adj[i]){
        if(vis[x]==false){
            dis[x]=min(dis[x],dis[i]+1);
            q.push(x);
        }
        
        if(vis[x]==true){
            dis[x]=min(dis[x],dis[i]+1);
        }

    }
    
 }
 
 return;   
}


int main(){
    
 int v,e;
 cin>>v>>e;
 
 vector<int>adj[v];
 
 for(int i=0;i<e;i++){
     int u,v;
     cin>>u>>v;
   adj[u].push_back(v);  
   adj[u].push_back(v);  
 }
    
   
vector<bool>vis(v,false);   
 vector<int>dis(v,INT_MAX);  
  
bfs(adj,vis,dis,0);
 
 
 for(int i=0;i<v;i++){
     cout<<dis[i]<<" ";
 }

    
    return 0;
}
